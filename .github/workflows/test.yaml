name: test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  STABLE_PYTHON_VERSION: '3.11'
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  tests:
    name: Python ${{ matrix.python-version }} with PySpark ${{ matrix.pyspark-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.10']
        pyspark-version: ['34']
        # os: [ubuntu-latest, windows-latest, macos-latest]
        # python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        # pyspark-version: ['33','34','35']

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Ensure latest pip
      run: python -m pip install --upgrade pip

    - name: where are we
      run: pwd

    - name: Install hatch
      run: |
        pip install  hatch
    
    - name: hatch envs
      run: hatch env show

    # - name: Run static analysis
    #   run: hatch fmt --check

    # - name: Check types
    #   run: hatch run types:check

    - name: Run tests
      run: hatch run test.py${{ matrix.python-version }}-pyspark${{ matrix.pyspark-version }}:all_tests --cover-quiet --randomize --parallel --retries 5 --retry-delay 3

    - name: Disambiguate coverage filename
      run: mv .coverage ".coverage.${{ matrix.os }}.${{ matrix.python-version }}"

    - name: Upload coverage data
      uses: actions/upload-artifact@v4
      with:
        name: coverage-${{ matrix.os }}-${{ matrix.python-version }}
        path: .coverage*

  coverage:
    name: Report coverage
    runs-on: ubuntu-latest
    needs:
    - tests

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ env.STABLE_PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.STABLE_PYTHON_VERSION }}

    - name: Install Hatch
      run: pip install hatch

    # - name: Trigger build for auto-generated files
    #   run: hatch build --hooks-only

    - name: Download coverage data
      uses: actions/download-artifact@v4
      with:
        pattern: coverage-*
        merge-multiple: true

    - name: Combine coverage data
      run: hatch run coverage:combine

    - name: Export coverage reports
      run: |
        hatch run coverage:report-xml
        hatch run coverage:report-uncovered-html

    - name: Upload uncovered HTML report
      uses: actions/upload-artifact@v4
      with:
        name: uncovered-html-report
        path: htmlcov

    - name: Generate coverage summary
      run: hatch run coverage:generate-summary

    - name: Write coverage summary report
      if: github.event_name == 'pull_request'
      run: hatch run coverage:write-summary-report

    - name: Update coverage pull request comment
      if: github.event_name == 'pull_request' && !github.event.pull_request.head.repo.fork
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        path: coverage-report.md

  # https://github.com/marketplace/actions/alls-green#why
  check: # This job does nothing and is only used for the branch protection
    if: always()

    needs:
    - tests 
    - coverage

    runs-on: ubuntu-latest

    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}